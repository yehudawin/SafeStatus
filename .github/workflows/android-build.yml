name: Build Android APK/AAB

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📱 Checkout Repository
      uses: actions/checkout@v4
      
    - name: ☕ Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🏗️ Build Web App
      run: npm run build
      
    - name: 📱 Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: 🔧 Sync Capacitor
      run: |
        npm install -g @capacitor/cli
        npx cap sync android
        
    - name: 🔑 Setup Signing (if secrets available)
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      run: |
        if [ "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" != "" ]; then
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
          echo "SIGNING_ENABLED=true" >> $GITHUB_ENV
        else
          echo "SIGNING_ENABLED=false" >> $GITHUB_ENV
        fi
        
    - name: 🏗️ Build APK (Debug) 
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleDebug
        
    - name: 🏗️ Build APK (Release - Unsigned)
      if: ${{ env.SIGNING_ENABLED == 'false' }}
      run: |
        cd android
        chmod +x gradlew
        ./gradlew assembleRelease
        
    - name: 🏗️ Build AAB (Release - Signed)
      if: ${{ env.SIGNING_ENABLED == 'true' }}
      env:
        KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      run: |
        cd android
        chmod +x gradlew
        echo "storePassword=$KEYSTORE_PASSWORD" >> gradle.properties
        echo "keyPassword=$KEY_PASSWORD" >> gradle.properties
        echo "keyAlias=$KEY_ALIAS" >> gradle.properties
        echo "storeFile=keystore.jks" >> gradle.properties
        ./gradlew bundleRelease
        
    - name: 📤 Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: SafeStatus-APK-${{ github.sha }}
        path: |
          android/app/build/outputs/apk/debug/app-debug.apk
          android/app/build/outputs/apk/release/app-release-unsigned.apk
        retention-days: 30
        
    - name: 📤 Upload AAB Artifact
      if: ${{ env.SIGNING_ENABLED == 'true' }}
      uses: actions/upload-artifact@v4
      with:
        name: SafeStatus-AAB-${{ github.sha }}
        path: android/app/build/outputs/bundle/release/app-release.aab
        retention-days: 90
        
    - name: 🏷️ Create Release (on tag)
      if: ${{ startsWith(github.ref, 'refs/tags/v') && env.SIGNING_ENABLED == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        files: |
          android/app/build/outputs/bundle/release/app-release.aab
          android/app/build/outputs/apk/release/app-release.apk
        body: |
          ## SafeStatus v${{ github.ref_name }}
          
          ### 📱 קבצי התקנה:
          - **AAB** (לGoogle Play Store): `app-release.aab`
          - **APK** (התקנה ידנית): `app-release.apk`
          
          ### 🆕 שינויים:
          - עדכונים וחידושים בגרסה זו
          
          ### 📋 הוראות התקנה:
          1. **לGoogle Play Store**: העלה קובץ AAB
          2. **התקנה ידנית**: הורד והתקן APK
          
          **נוצר אוטומטית ב-GitHub Actions** 🤖
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 