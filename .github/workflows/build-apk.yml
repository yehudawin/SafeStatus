name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: 34
        build-tools: 34.0.0
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build web app
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        VITE_TWILIO_ACCOUNT_SID: ${{ secrets.VITE_TWILIO_ACCOUNT_SID }}
        VITE_TWILIO_AUTH_TOKEN: ${{ secrets.VITE_TWILIO_AUTH_TOKEN }}
        VITE_TWILIO_PHONE_NUMBER: ${{ secrets.VITE_TWILIO_PHONE_NUMBER }}
        
    - name: Install Capacitor CLI
      run: npm install -g @capacitor/cli
      
    - name: Copy web assets to Android
      run: npx cap copy android
      
    - name: Update Android plugins
      run: npx cap update android
      
    - name: Grant execute permission for gradlew
      run: chmod +x android/gradlew
      
    - name: Build Android Debug APK
      if: ${{ github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == '' }}
      working-directory: android
      run: ./gradlew assembleDebug
      
    - name: Build Android Release APK  
      if: ${{ github.event.inputs.release_type == 'release' }}
      working-directory: android
      run: ./gradlew assembleRelease
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        
    - name: Upload Debug APK
      if: ${{ github.event.inputs.release_type == 'debug' || github.event.inputs.release_type == '' }}
      uses: actions/upload-artifact@v4
      with:
        name: safestatus-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload Release APK
      if: ${{ github.event.inputs.release_type == 'release' }}
      uses: actions/upload-artifact@v4
      with:
        name: safestatus-release-apk
        path: android/app/build/outputs/apk/release/app-release.apk
        
    - name: Create Release
      if: ${{ github.event.inputs.release_type == 'release' && github.ref == 'refs/heads/main' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: SafeStatus v${{ github.run_number }}
        body: |
          üì± SafeStatus Android APK - Version ${{ github.run_number }}
          
          ## Changes
          - Built from commit: ${{ github.sha }}
          - Build date: ${{ github.event.head_commit.timestamp }}
          
          ## Installation
          1. Download the APK file
          2. Enable "Install from Unknown Sources" in Android settings
          3. Install the APK
          
          ## Features
          - üîê SMS/Email authentication with Twilio
          - üì± Progressive Web App (PWA)
          - üáÆüá± Hebrew RTL support
          - üö® Emergency status updates
          - üë• Contact management
        files: |
          android/app/build/outputs/apk/release/app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 